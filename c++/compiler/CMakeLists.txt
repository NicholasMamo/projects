cmake_minimum_required(VERSION 3.3)
project(Lexer)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES main.cpp headers/file.h implementations/file.cpp headers/token.h implementations/token.cpp headers/lexer.h implementations/lexer.cpp headers/parser.h implementations/parser.cpp headers/AST/AST_node.h implementations/AST/AST_node.cpp headers/AST/AST_number_node.h implementations/AST/AST_number_node.cpp headers/AST/AST_program_node.h implementations/AST/AST_program_node.cpp headers/AST/AST_binary_expression_node.h implementations/AST/AST_binary_expression_node.cpp headers/visitor/visitor.h headers/visitor/printer_visitor.h implementations/visitor/printer_visitor.cpp headers/AST/AST_var_declaration_node.h headers/AST/AST_identifier_node.h implementations/AST/AST_identifier_node.cpp headers/AST/AST_type_node.h implementations/AST/AST_type_node.cpp implementations/AST/AST_var_declaration_node.cpp headers/exceptions/unexpected_token.h implementations/exceptions/unexpected_token.cpp headers/exceptions/missing_bracket.h implementations/exceptions/missing_bracket.cpp headers/AST/AST_assignment_node.h implementations/AST/AST_assignment_node.cpp headers/AST/AST_write_statement_node.h implementations/AST/AST_write_statement_node.cpp headers/AST/AST_statement_node.h implementations/AST/AST_statement_node.cpp headers/AST/AST_unary_node.h implementations/AST/AST_unary_node.cpp headers/AST/AST_term_node.h headers/AST/AST_factor_node.h implementations/AST/AST_term_node.cpp implementations/AST/AST_factor_node.cpp headers/AST/AST_block_node.h implementations/AST/AST_block_node.cpp headers/AST/AST_while_node.h implementations/AST/AST_while_node.cpp headers/AST/AST_if_node.h implementations/AST/AST_if_node.cpp headers/exceptions/unexpected_input.h implementations/exceptions/unexpected_input.cpp headers/exceptions/parse_exception.h implementations/exceptions/parse_exception.cpp headers/AST/AST_func_declaration_node.h headers/AST/AST_formal_parameter_node.h implementations/AST/AST_formal_parameter_node.cpp implementations/AST/AST_func_declaration_node.cpp headers/AST/AST_formal_parameters_node.h implementations/AST/AST_formal_parameters_node.cpp headers/AST/AST_string_node.h implementations/AST/AST_string_node.cpp headers/AST/AST_real_number_node.h implementations/AST/AST_real_number_node.cpp headers/AST/AST_int_number_node.h implementations/AST/AST_int_number_node.cpp headers/AST/AST_boolean_node.h implementations/AST/AST_boolean_node.cpp headers/AST/AST_arithmetic_factor_node.h implementations/AST/AST_arithmetic_factor_node.cpp headers/AST/AST_boolean_factor_node.h implementations/AST/AST_boolean_factor_node.cpp headers/AST/AST_expression_node.h implementations/AST/AST_expression_node.cpp headers/AST/AST_arithmetic_term_node.h headers/AST/AST_boolean_term_node.h implementations/AST/AST_arithmetic_term_node.cpp implementations/AST/AST_boolean_term_node.cpp headers/AST/AST_func_call_node.h implementations/AST/AST_func_call_node.cpp headers/AST/AST_actual_parameters_node.h implementations/AST/AST_actual_parameters_node.cpp headers/AST/AST_return_node.h implementations/AST/AST_return_node.cpp headers/repl.h implementations/repl.cpp headers/visitor/semantic_visitor.h implementations/visitor/semantic_visitor.cpp headers/stack.h headers/exceptions/stack_empty_exception.h implementations/exceptions/stack_empty_exception.cpp headers/symbol_table/symbol_table.h headers/symbol_table/symbol_var.h implementations/symbol_table/symbol_var.cpp implementations/symbol_table/symbol_table.cpp headers/symbol_table/symbol_func.h headers/symbol_table/symbol.h implementations/symbol_table/symbol.cpp implementations/symbol_table/symbol_func.cpp headers/exceptions/incompatible_types_exception.h implementations/exceptions/incompatible_types_exception.cpp headers/exceptions/undeclared_var_exception.h implementations/exceptions/undeclared_var_exception.cpp headers/exceptions/incorrect_parameter_count.h "implementations/exceptions/incorrect_parameter_count.cpp" headers/exceptions/undeclared_func_exception.h implementations/exceptions/undeclared_func_exception.cpp headers/exceptions/missing_return_exception.h implementations/exceptions/missing_return_exception.cpp headers/exceptions/incorrect_return_type_exception.h implementations/exceptions/incorrect_return_type_exception.cpp headers/exceptions/general_exception.h headers/visitor/interpreter_visitor.h implementations/visitor/interpreter_visitor.cpp)
add_executable(Lexer ${SOURCE_FILES})